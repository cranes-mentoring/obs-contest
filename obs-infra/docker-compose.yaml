services:

  jaeger:
    image: jaegertracing/all-in-one:1.52
    ports:
      - "6831:6831/udp" # UDP port for Jaeger agent
      - "16686:16686" # Web UI
      - "14268:14268" # HTTP port for spans
    networks:
      - internal

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - kafka-1
      - jaeger
      - otel-collector
    command:
      --config.file=/etc/prometheus/prometheus.yml
    networks:
      - internal

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    command: ['--config=/etc/otel-collector.yaml']
    ports:
      - "4317:4317" # OTLP gRPC receiver
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml
    depends_on:
      - jaeger
    networks:
      - internal

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: public
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - internal

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: example_user
      MONGO_INITDB_ROOT_PASSWORD: example_password
    volumes:
      - mongo-data:/data/db
    networks:
      - internal

  controller-1:
    image: confluentinc/cp-server:latest
    ports:
      - 19092:9092
      - 19093:9093
      - 9012:9012
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller-1:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENERS: 'CONTROLLER://controller-1:9093'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:19092
    networks:
      - internal

  kafka-1:
    image: confluentinc/cp-server:latest
    ports:
      - 29092:9092
      - 29093:9093
      - 9013:9013
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: 'broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller-1:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka-1:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:29092
    depends_on:
      - controller-1
    networks:
      - internal

  debezium:
    image: debezium/connect:2.2
    platform: linux/amd64
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
      GROUP_ID: "debezium"
      CONFIG_STORAGE_TOPIC: "debezium_config"
      OFFSET_STORAGE_TOPIC: "debezium_offset"
      STATUS_STORAGE_TOPIC: "debezium_status"
      KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "debezium"
    depends_on:
      - kafka-1
    ports:
      - "8083:8083"
    networks:
      - internal
    volumes:
      - ./debezium-plugins:/kafka/connect

volumes:
  postgres-data:
  mongo-data:
  otel-collector-config:
    driver: local
  kafka-data:

networks:
  internal:
    driver: bridge
